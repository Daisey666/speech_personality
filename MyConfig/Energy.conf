(MSG) [2] in SMILExtract : openSMILE starting!
(MSG) [2] in SMILExtract : config file is: smile.conf
(MSG) [2] in cComponentManager : successfully registered 95 component types.

 ///////////////////////////////////////////////////////////////////////////
 // openSMILE configuration template file generated by SMILExtract binary //
 // you must manually adapt this file and change at least the             //
 // 'reader/writer.dmLevel =' lines.                                      //
 ///////////////////////////////////////////////////////////////////////////

 ;===== component manager configuration (= list of enabled components!) =====

[componentInstances:cComponentManager]
instance[dataMemory].type = cDataMemory
instance[waveSource].type = cWaveSource
instance[framer].type = cFramer
instance[energy].type = cEnergy
instance[csvSink].type = cCsvSink
printLevelStats = 1
nThreads = 1

// ============= component configuration sections begin here ==============


  ;;;; default (template) configuration section for component 'cWaveSource' ;;;;
[waveSource:cWaveSource]
writer.dmLevel = wave
basePeriod = -1
filename = \cm[inputfile (I): file name of the input wave file]
properTimestamps = 0
monoMixdown = 1
// segmentList[] = 
start = 0
end = -1
endrel = 0
noHeader = 0
outFieldName = pcm
 

  ;;;; default (template) configuration section for component 'cFramer' ;;;;
[framer:cFramer]
reader.dmLevel = wave
writer.dmLevel = waveframes
copyInputName = 1
allowLastFrameIncomplete = 0
frameMode = fixed
frameSize = 0.050000
frameStep = 0.010000
frameCenterSpecial = left
noPostEOIprocessing = 1
 

  ;;;; default (template) configuration section for component 'cEnergy' ;;;;
[energy:cEnergy]
reader.dmLevel = waveframes
writer.dmLevel = energy
nameAppend = energy
copyInputName = 1
processArrayFields = 0
includeSingleElementFields = 0
preserveFieldNames = 1
htkcompatible = 0
rms = 0
energy2 = 0
log = 1
escaleLog = 1
escaleRms = 1
escaleSquare = 1
ebiasLog = 0
ebiasRms = 0
ebiasSquare = 0
 

  ;;;; default (template) configuration section for component 'cCsvSink' ;;;;
[csvSink:cCsvSink]
reader.dmLevel=energy
filename=\cm[output(O){energy.csv}:output csv file for pitch data]
append=0
 

// ################### END OF openSMILE CONFIG FILE ######################

